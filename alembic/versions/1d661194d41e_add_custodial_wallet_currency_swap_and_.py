"""Add custodial wallet, currency, swap, and crypto address models

Revision ID: 1d661194d41e
Revises: 
Create Date: 2025-07-14 08:40:11.352415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1d661194d41e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('type', sa.Enum('CRYPTO', 'FIAT', name='currencytype'), nullable=False),
    sa.Column('symbol', sa.String(length=8), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_currencies_code'), 'currencies', ['code'], unique=True)
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=64), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('type', sa.Enum('RESERVE', 'RELEASE', name='reservationtype'), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'reference', 'type', name='_user_ref_type_uc')
    )
    op.create_index(op.f('ix_reservations_user_id'), 'reservations', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=255), nullable=False),
    sa.Column('encrypted_pwd', sa.String(length=255), nullable=False),
    sa.Column('ref_code', sa.String(length=10), nullable=False),
    sa.Column('sponsor_code', sa.String(length=10), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('default_currency', sa.String(length=8), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_default_currency'), 'users', ['default_currency'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('locked_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_number', sa.String(length=10), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'currency_id', name='uq_accounts_user_currency')
    )
    op.create_index(op.f('ix_accounts_account_number'), 'accounts', ['account_number'], unique=True)
    op.create_index(op.f('ix_accounts_currency_id'), 'accounts', ['currency_id'], unique=False)
    op.create_index(op.f('ix_accounts_label'), 'accounts', ['label'], unique=False)
    op.create_index(op.f('ix_accounts_user_id'), 'accounts', ['user_id'], unique=False)
    op.create_table('email_verifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'USED', 'EXPIRED', name='emailverifystatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_verifications_user_id'), 'email_verifications', ['user_id'], unique=False)
    op.create_table('forgot_passwords',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=8), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'USED', 'EXPIRED', name='forgotpasswordstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forgot_passwords_user_id'), 'forgot_passwords', ['user_id'], unique=False)
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('phone_verified', sa.Boolean(), nullable=False),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_factor_key', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profiles_user_id'), 'profiles', ['user_id'], unique=False)
    op.create_table('crypto_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=128), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('memo', sa.String(length=128), nullable=True),
    sa.Column('address_type', sa.String(length=32), nullable=True),
    sa.Column('version', sa.String(length=16), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'address', name='uq_account_address'),
    sa.UniqueConstraint('address')
    )
    op.create_index(op.f('ix_crypto_addresses_account_id'), 'crypto_addresses', ['account_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('reference_id', sa.String(length=64), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'WITHDRAWAL', 'SWAP', 'TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REVERSED', 'AWAITING_CONFIRMATION', name='transactionstatus'), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('provider', sa.Enum('RELWORX', 'MPESA', 'CRYPTO', 'BANK', 'BLOCKBRITE', name='paymentprovider'), nullable=True),
    sa.Column('provider_reference', sa.String(length=128), nullable=True),
    sa.Column('blockchain_txid', sa.String(length=128), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('required_confirmations', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=128), nullable=True),
    sa.Column('fee_amount', sa.Numeric(precision=15, scale=8), nullable=True),
    sa.Column('fee_currency_id', sa.Integer(), nullable=True),
    sa.Column('fee_account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fee_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['fee_currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_account_id'), 'transactions', ['account_id'], unique=False)
    op.create_index('ix_transactions_account_reference_type', 'transactions', ['account_id', 'reference_id', 'type'], unique=False)
    op.create_index(op.f('ix_transactions_blockchain_txid'), 'transactions', ['blockchain_txid'], unique=False)
    op.create_index(op.f('ix_transactions_reference_id'), 'transactions', ['reference_id'], unique=False)
    op.create_table('swaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('from_account_id', sa.Integer(), nullable=False),
    sa.Column('to_account_id', sa.Integer(), nullable=False),
    sa.Column('from_amount', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('to_amount', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('fee_amount', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('fee_currency_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['fee_currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['from_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('swaps')
    op.drop_index(op.f('ix_transactions_reference_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_blockchain_txid'), table_name='transactions')
    op.drop_index('ix_transactions_account_reference_type', table_name='transactions')
    op.drop_index(op.f('ix_transactions_account_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_crypto_addresses_account_id'), table_name='crypto_addresses')
    op.drop_table('crypto_addresses')
    op.drop_index(op.f('ix_profiles_user_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_forgot_passwords_user_id'), table_name='forgot_passwords')
    op.drop_table('forgot_passwords')
    op.drop_index(op.f('ix_email_verifications_user_id'), table_name='email_verifications')
    op.drop_table('email_verifications')
    op.drop_index(op.f('ix_accounts_user_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_label'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_currency_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_account_number'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_default_currency'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_reservations_user_id'), table_name='reservations')
    op.drop_table('reservations')
    op.drop_index(op.f('ix_currencies_code'), table_name='currencies')
    op.drop_table('currencies')
    # ### end Alembic commands ###
