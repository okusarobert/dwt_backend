"""Added currency and removed currency_id from accounts

Revision ID: ad43b406e01b
Revises: 6a38627ad653
Create Date: 2025-07-16 15:00:39.625984

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad43b406e01b'
down_revision: Union[str, None] = '6a38627ad653'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    bind = op.get_bind()
    inspector = sa.inspect(bind)

    # Get existing columns, indexes, and constraints for the 'accounts' table
    columns = [col['name'] for col in inspector.get_columns('accounts')]
    indexes = [idx['name'] for idx in inspector.get_indexes('accounts')]
    constraints = inspector.get_unique_constraints('accounts')
    constraint_names = [c['name'] for c in constraints]
    fkeys = inspector.get_foreign_keys('accounts')
    fkey_names = [fk['name'] for fk in fkeys]

    # Add 'currency' column if it doesn't exist
    if 'currency' not in columns:
        op.add_column('accounts', sa.Column('currency', sa.String(length=8), nullable=True))

    # Drop index 'ix_accounts_currency_id' if it exists
    if 'ix_accounts_currency_id' in indexes:
        op.drop_index('ix_accounts_currency_id', table_name='accounts')

    # Drop unique constraint 'uq_accounts_user_currency' if it exists
    if 'uq_accounts_user_currency' in constraint_names:
        op.drop_constraint('uq_accounts_user_currency', 'accounts', type_='unique')

    # Re-fetch indexes as they might have changed
    indexes = [idx['name'] for idx in inspector.get_indexes('accounts')]
    # Create index 'ix_accounts_currency' if it doesn't exist
    if 'ix_accounts_currency' not in indexes:
        op.create_index(op.f('ix_accounts_currency'), 'accounts', ['currency'], unique=False)

    # Drop foreign key 'accounts_currency_id_fkey' if it exists
    if 'accounts_currency_id_fkey' in fkey_names:
        op.drop_constraint('accounts_currency_id_fkey', 'accounts', type_='foreignkey')

    # Drop 'currency_id' column if it exists
    if 'currency_id' in columns:
        op.drop_column('accounts', 'currency_id')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accounts', sa.Column('currency_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('accounts_currency_id_fkey', 'accounts', 'currencies', ['currency_id'], ['id'])
    op.drop_index(op.f('ix_accounts_currency'), table_name='accounts')
    op.create_unique_constraint('uq_accounts_user_currency', 'accounts', ['user_id', 'currency_id'])
    op.create_index('ix_accounts_currency_id', 'accounts', ['currency_id'], unique=False)
    op.drop_column('accounts', 'currency')
    # ### end Alembic commands ###
